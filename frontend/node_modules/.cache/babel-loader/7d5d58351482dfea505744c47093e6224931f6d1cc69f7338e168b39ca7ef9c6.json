{"ast":null,"code":"var _jsxFileName = \"/home/aladin/tinder/frontend/src/components/ChatDisplay.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatDisplay = ({\n  user,\n  clickedUser\n}) => {\n  _s();\n  const userId = user === null || user === void 0 ? void 0 : user.user_id;\n  const clickedUserId = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.user_id;\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/messages', {\n          params: {\n            userId,\n            correspondingUserId: clickedUserId\n          }\n        });\n        setMessages(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (userId && clickedUserId) {\n      fetchMessages();\n    }\n  }, [userId, clickedUserId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Chat, {\n      messages: messages,\n      user: user,\n      clickedUser: clickedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      user: user,\n      clickedUser: clickedUser,\n      fetchMessages: fetchMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatDisplay, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = ChatDisplay;\nexport default ChatDisplay;\nvar _c;\n$RefreshReg$(_c, \"ChatDisplay\");","map":{"version":3,"names":["ChatDisplay","user","clickedUser","_s","userId","user_id","clickedUserId","messages","setMessages","useState","useEffect","fetchMessages","response","axios","get","params","correspondingUserId","data","error","console","log","_jsxDEV","_Fragment","children","Chat","fileName","_jsxFileName","lineNumber","columnNumber","ChatInput","_c","$RefreshReg$"],"sources":["/home/aladin/tinder/frontend/src/components/ChatDisplay.js"],"sourcesContent":["const ChatDisplay = ({ user, clickedUser }) => {\n    const userId = user?.user_id;\n    const clickedUserId = clickedUser?.user_id;\n    const [messages, setMessages] = useState([]);\n\n    useEffect(() => {\n        const fetchMessages = async () => {\n            try {\n                const response = await axios.get('http://localhost:8000/messages', {\n                    params: { userId, correspondingUserId: clickedUserId }\n                });\n                setMessages(response.data);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n\n        if (userId && clickedUserId) {\n            fetchMessages();\n        }\n    }, [userId, clickedUserId]);\n\n    return (\n        <>\n            <Chat messages={messages} user={user} clickedUser={clickedUser} />\n            <ChatInput\n                user={user}\n                clickedUser={clickedUser}\n                fetchMessages={fetchMessages}\n            />\n        </>\n    );\n};\n\nexport default ChatDisplay;\n"],"mappings":";;;;AAAA,MAAMA,WAAW,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAMC,MAAM,GAAGH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,OAAO;EAC5B,MAAMC,aAAa,GAAGJ,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEG,OAAO;EAC1C,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,gCAAgC,EAAE;UAC/DC,MAAM,EAAE;YAAEX,MAAM;YAAEY,mBAAmB,EAAEV;UAAc;QACzD,CAAC,CAAC;QACFE,WAAW,CAACI,QAAQ,CAACK,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACJ,CAAC;IAED,IAAId,MAAM,IAAIE,aAAa,EAAE;MACzBK,aAAa,CAAC,CAAC;IACnB;EACJ,CAAC,EAAE,CAACP,MAAM,EAAEE,aAAa,CAAC,CAAC;EAE3B,oBACIe,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBACIF,OAAA,CAACG,IAAI;MAACjB,QAAQ,EAAEA,QAAS;MAACN,IAAI,EAAEA,IAAK;MAACC,WAAW,EAAEA;IAAY;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClEP,OAAA,CAACQ,SAAS;MACN5B,IAAI,EAAEA,IAAK;MACXC,WAAW,EAAEA,WAAY;MACzBS,aAAa,EAAEA;IAAc;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA,eACJ,CAAC;AAEX,CAAC;AAACzB,EAAA,CAhCIH,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AAkCjB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}